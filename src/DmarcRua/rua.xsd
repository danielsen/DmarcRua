<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <!-- The time range in UTC covered by messages in this report, specified in seconds since epoch. -->
    <xs:complexType name="DateRangeType">
        <xs:all>
            <xs:element name="begin" type="xs:integer"/>
            <xs:element name="end" type="xs:integer"/>
        </xs:all>
    </xs:complexType>

    <!-- Report generator metadata -->
    <xs:complexType name="ReportMetadataType">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="org_name" type="xs:string"/>
            <xs:element name="email" type="xs:string"/>
            <xs:element name="extra_contact_info" type="xs:string" minOccurs="0"/>
            <xs:element name="report_id" type="xs:string"/>
            <xs:element name="date_range" type="DateRangeType"/>
            <xs:element name="error" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>
    
    <!-- The methods used to discovery the policy used during evaluation.
         Available values are "psl" and "treewalk"
    -->
    <xs:simpleType name="DiscoveryType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="psl"/>
            <xs:enumeration value="treewalk"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Values for Testing mode attached to Policy -->
    <xs:simpleType name="TestingType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="n"/>
            <xs:enumeration value="y"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- The policy actions specified by p and sp in the DMARC record. -->
    <!-- ==============================================================
    2023-12-21
      Added empty string handling. Observed reports from Trustwave
      MailMarshal sending empty <sp> tags in <policy_published>.
    
    2025-02-12
      Added handling for "nil". Observed in reports from mail.ru  
    =============================================================== -->
    <xs:simpleType name="DispositionType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="quarantine"/>
            <xs:enumeration value="reject"/>
            <xs:enumeration value="nil"/>
            <xs:enumeration value=""/>
        </xs:restriction>
    </xs:simpleType>

    <!-- The DMARC policy that applied to the messages in this report. -->
    <!-- ==============================================================
    2019-09-26 
      Made "adkim" and "aspf" optional. Observed to be missing in
      reports from fastmail.com when domain uses default policies.
    ============================================================== -->
    <xs:complexType name="PolicyPublishedType">
        <xs:all>
            <!-- The domain at which the DMARC record was found. -->
            <xs:element name="domain" type="xs:string"/>
            <!-- The DKIM alignment mode. -->
            <xs:element name="adkim" type="xs:string" minOccurs="0"/>
            <!-- The SPF alignment mode. -->
            <xs:element name="aspf" type="xs:string" minOccurs="0"/>
            <!-- The policy to apply to messages from the domain. -->
            <xs:element name="p" type="DispositionType"/>
            <!-- The handling policy for non-existent subdomains-->
            <xs:element name="np" type="DispositionType" minOccurs="0"/>
            <!-- The policy to apply to messages from subdomains. -->
            <xs:element name="sp" type="DispositionType" minOccurs="0"/>
            <!-- The percent of messages to which policy applies. -->
            <xs:element name="pct" type="xs:integer" minOccurs="0"/>
            <!-- Defines the error reporting policy. -->
            <xs:element name="fo" type="xs:string" minOccurs="0"/>
            <!-- Defines the time in seconds between reports requested. -->
            <xs:element name="ri" type="xs:integer" minOccurs="0"/>
            <!-- Defines the Reporting Formats (Unknown Data Type) -->
            <xs:element name="rf" type="xs:string" minOccurs="0"/>
            <!-- Defines the Reporting URI for Aggregate Data. -->
            <xs:element name="rua" type="xs:string" minOccurs="0"/>
            <!-- Defines the Reporting URI for Failure Data. -->
            <xs:element name="ruf" type="xs:string" minOccurs="0"/>
            <!-- Defines the Reporting URI for Failure Data. -->
            <xs:element name="v" type="xs:string" minOccurs="0"/>
            <!-- Defines method used to find / obtain policy. -->
            <xs:element name="discovery_method" type="DiscoveryType" minOccurs="0"/>
            <!-- Defines testing mode declaration in the DMARC record. -->
            <xs:element name="testing" type="TestingType" minOccurs="0"/>
        </xs:all>
    </xs:complexType>

    <!-- The DMARC-aligned authentication result. -->
    <!-- ==============================================================
    2025-02-14
      Added softfail enumeration. Observed in reports from uniqa.cz
    ============================================================== -->
    <xs:simpleType name="DMARCResultType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="pass"/>
            <xs:enumeration value="fail"/>
            <xs:enumeration value="softfail"/>
            <xs:enumeration value="none"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Reasons that may affect DMARC disposition or execution thereof. -->
    <!-- ==============================================================
    Descriptions of the PolicyOverrideTypes:
    
    forwarded:  Message was relayed via a known forwarder, or local
       heuristics identified the message as likely having been forwarded.
       There is no expectation that authentication would pass.
    
    local_policy:  The Mail Receiver's local policy exempted the message
       from being subjected to the Domain Owner's requested policy
       action.
    
    mailing_list:  Local heuristics determined that the message arrived
       via a mailing list, and thus authentication of the original
       message was not expected to succeed.
    
    other:  Some policy exception not covered by the other entries in
       this list occurred.  Additional detail can be found in the
       PolicyOverrideReason's "comment" field.
    
    sampled_out:  Message was exempted from application of policy by the
       "pct" setting in the DMARC policy record.
    
    trusted_forwarder:  Message authentication failure was anticipated by
       other evidence linking the message to a locally-maintained list of
       known and trusted forwarders.
    ============================================================== -->

    <!-- ==============================================================
    2025-02-13
      Added empty string value. Observed in reports from kddi.com
    ============================================================== -->
    <xs:simpleType name="PolicyOverrideType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="forwarded"/>
            <xs:enumeration value="sampled_out"/>
            <xs:enumeration value="trusted_forwarder"/>
            <xs:enumeration value="mailing_list"/>
            <xs:enumeration value="local_policy"/>
            <xs:enumeration value="other"/>
            <xs:enumeration value=""/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="PolicyOverrideReason">
        <xs:all>
            <xs:element name="type" type="PolicyOverrideType"/>
            <xs:element name="comment" type="xs:string" minOccurs="0"/>
        </xs:all>
    </xs:complexType>

    <!-- Taking into account everything else in the record, the results of applying DMARC. -->
    <xs:complexType name="PolicyEvaluatedType">
        <xs:sequence>
            <xs:element name="disposition" type="DispositionType"/>
            <xs:element name="dkim" type="DMARCResultType"/>
            <xs:element name="spf" type="DMARCResultType"/>
            <xs:element name="reason" type="PolicyOverrideReason" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Updated IP address regexes as supplied by the v2 spec. https://datatracker.ietf.org/doc/draft-ietf-dmarc-aggregate-reporting/ -->
    <xs:simpleType name="IPAddress">
        <xs:restriction base="xs:string">
            <!-- IPv4 -->
            <xs:pattern value="((1?\d?\d|2[0-4]\d|25[0-5])\.){3}(1?\d?\d|2[0-4]\d|25[0-5])"/>
            <!-- IPv6 -->
            <xs:pattern value="([A-Fa-f\d]{1,4}:){7}[A-Fa-f\d]{1,4}"/>
            <!-- RFC 5952 zero compression IPv6 (lax) -->
            <xs:pattern value="([A-Fa-f\d]{1,4}:){1,7}:"/>
            <xs:pattern value="([A-Fa-f\d]{1,4}:){1,6}:[A-Fa-f\d]{1,4}"/>
            <xs:pattern value="([A-Fa-f\d]{1,4}:){1,5}:[A-Fa-f\d]{1,4}:[A-Fa-f\d]{1,4}"/>
            <xs:pattern value="([A-Fa-f\d]{1,4}:){1,4}:([A-Fa-f\d]{1,4}:){1,2}[A-Fa-f\d]{1,4}"/>
            <xs:pattern value="([A-Fa-f\d]{1,4}:){1,3}:([A-Fa-f\d]{1,4}:){1,3}[A-Fa-f\d]{1,4}"/>
            <xs:pattern value="([A-Fa-f\d]{1,4}:){1,2}:([A-Fa-f\d]{1,4}:){1,4}[A-Fa-f\d]{1,4}"/>
            <xs:pattern value="[A-Fa-f\d]{1,4}::([A-Fa-f\d]{1,4}:){1,5}[A-Fa-f\d]{1,4}"/>
            <xs:pattern value="::([A-Fa-f\d]{1,4}:){1,6}[A-Fa-f\d]{1,4}"/>
            <xs:pattern value="::[A-Fa-f\d]{1,4}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="RowType">
        <xs:all>
            <!-- The connecting IP. -->
            <xs:element name="source_ip" type="IPAddress"/>
            <!-- The number of matching messages -->
            <xs:element name="count" type="xs:integer"/>
            <!-- The DMARC disposition applying to matching messages. -->
            <xs:element name="policy_evaluated" type="PolicyEvaluatedType" minOccurs="0"/>
        </xs:all>
    </xs:complexType>

    <!-- ==============================================================
    DN - 2019-09-26 
      Added "envelope_from". Observed in reports from AmazonSES
    ============================================================== -->
    <xs:complexType name="IdentifierType">
        <xs:all>
            <!-- The envelope recipient domain. -->
            <xs:element name="envelope_to" type="xs:string" minOccurs="0"/>
            <!-- The payload From domain. -->
            <xs:element name="header_from" type="xs:string"/>
            <!-- The envelope from domain. -->
            <xs:element name="envelope_from" type="xs:string" minOccurs="0"/>
        </xs:all>
    </xs:complexType>

    <!-- DKIM verification result, according to RFC 5451 Section 2.4.1. -->
    <!-- ==============================================================
    2025-02-14 
      Added "", observed in reports from gosecure.net
      Added "invalid", observed in reports from nfm.net
      Added "unknown", observed in reports from inexio.net
    ============================================================== -->
    <xs:simpleType name="DKIMResultType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="pass"/>
            <xs:enumeration value="fail"/>
            <xs:enumeration value="policy"/>
            <xs:enumeration value="neutral"/>
            <xs:enumeration value="temperror"/>
            <xs:enumeration value="permerror"/>
            <xs:enumeration value=""/>
            <xs:enumeration value="invalid"/>
            <xs:enumeration value="unknown"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="DKIMAuthResultType">
        <xs:all>
            <!-- The d= parameter in the signature -->
            <xs:element name="domain" type="xs:string"/>
            <!-- The "s=" parameter in the signature. -->
            <xs:element name="selector" type="xs:string" minOccurs="0"/>
            <!-- The DKIM verification result -->
            <xs:element name="result" type="DKIMResultType"/>
            <!-- Any extra information (e.g., from Authentication-Results -->
            <xs:element name="human_result" type="xs:string" minOccurs="0"/>
        </xs:all>
    </xs:complexType>

    <!-- SPF result -->
    <xs:simpleType name="SPFResultType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="neutral"/>
            <xs:enumeration value="pass"/>
            <xs:enumeration value="fail"/>
            <xs:enumeration value="softfail"/>
            <!-- "TempError" commonly implemented as "unknown" -->
            <xs:enumeration value="temperror"/>
            <!-- "PermError" commonly implemented as "error" -->
            <xs:enumeration value="permerror"/>
            <xs:enumeration value="hardfail"/>
            <xs:enumeration value=""/>
            <xs:enumeration value="unknown"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- ==============================================================
    DN - 2019-09-26 
      Added "scope". Observed in reports from fastmail.com 
    ============================================================== -->
    <xs:complexType name="SPFAuthResultType">
        <xs:all>
            <!-- The envelope From domain. -->
            <xs:element name="domain" type="xs:string"/>
            <!-- The SPF verification result -->
            <xs:element name="result" type="SPFResultType"/>
            <!-- The scope of evaluation -->
            <xs:element name="scope" type="xs:string" minOccurs="0"/>
            <!-- Information in the "human_result" field should be useful for debugging SPF auth issues -->
            <xs:element name="human_result" type="xs:string" minOccurs="0" maxOccurs="1"/>
        </xs:all>
    </xs:complexType>

    <!-- This element contains DKIM and SPF results, uninterpreted with respect to DMARC. -->
    <xs:complexType name="AuthResultType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <!-- There may be no DKIM signatures, or multiple DKIM signatures. -->
            <xs:element name="dkim" type="DKIMAuthResultType" minOccurs="0" maxOccurs="unbounded"/>
            <!-- There will always be at least one SPF result. -->
            <xs:element name="spf" type="SPFAuthResultType" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>

    <!-- This element contains all the authentication results used to evaluate the DMARC disposition for the given set of messages. -->
    <!-- ==============================================================
    2025-02-17
      Added handling for "identities". Multiple report providers are using the element instead of "identifiers".
    ============================================================== -->
    <xs:complexType name="RecordType">
        <xs:sequence>
            <xs:element name="row" type="RowType"/>
            <xs:choice minOccurs="0">
              <xs:element name="identifiers" type="IdentifierType"/>
              <xs:element name="identities" type="IdentifierType"/>
            </xs:choice>
            <xs:element name="auth_results" type="AuthResultType"/>
            <!-- row level extensions -->
            <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ExtensionType">
        <xs:sequence>
            <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Parent -->
    <!-- ==============================================================
    DN - 2019-09-26
      Added "version" as a child of "feedback". Observed in reports
      from AmazonSES and ProtonNet
    ============================================================== -->
    <xs:element name="feedback">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="version" type="xs:string" minOccurs="0"/>
                <xs:element name="report_metadata" type="ReportMetadataType"/>
                <xs:element name="policy_published" type="PolicyPublishedType"/>
                <xs:element name="record" type="RecordType" maxOccurs="unbounded"/>
                <!-- Top level extension type -->
                <xs:element name="extension" type="ExtensionType" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>
